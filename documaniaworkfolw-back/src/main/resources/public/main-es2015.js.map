{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/start-process/start-process.component.ts","./src/app/components/start-process/start-process.component.html","./src/app/components/start/start.component.ts","./src/app/components/start/start.component.html","./src/app/components/tasks/tasks.component.ts","./src/app/components/tasks/tasks.component.html","./src/app/components/upload/upload.component.ts","./src/app/components/upload/upload.component.html","./src/app/services/auth.guard.ts","./src/app/services/auth/auth.service.ts","./src/app/services/auth/basic-auth-interceptor.service.ts","./src/app/services/i18n/app-text-config-service.service.ts","./src/app/services/rest/camunda-rest.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { StartProcessComponent } from './components/start-process/start-process.component';\r\nimport { StartComponent } from './components/start/start.component';\r\nimport { TasksComponent } from './components/tasks/tasks.component';\r\nimport { UploadComponent } from './components/upload/upload.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: \"\", redirectTo: '/login', pathMatch: 'full' },\r\n  { path: \"login\", component: LoginComponent },\r\n  {\r\n    path: \"home\", component: HomeComponent, children: [\r\n      { path: \"upload\", component: UploadComponent },\r\n      { path: \"start\", component: StartComponent ,children : [\r\n        {path: \"process/:processdefinitionkey\", component: StartProcessComponent}\r\n      ] },\r\n      { path: \"tasks\", component: TasksComponent }\r\n\r\n\r\n\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'documaniaworkflow-front';\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AppTextConfigService } from './services/i18n/app-text-config-service.service';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { HttpInterceptorService } from './services/auth/basic-auth-interceptor.service';\r\nimport { AuthGuard } from './services/auth.guard';\r\nimport { AuthService } from './services/auth/auth.service';\r\nimport { CamundaRestService } from './services/rest/camunda-rest.service';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { UploadComponent } from './components/upload/upload.component';\r\nimport { StartComponent } from './components/start/start.component';\r\nimport { TasksComponent } from './components/tasks/tasks.component';\nimport { StartProcessComponent } from './components/start-process/start-process.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    UploadComponent,\r\n    StartComponent,\r\n    TasksComponent,\r\n    StartProcessComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    NgbModule,\r\n    CommonModule,\r\n    HttpClientModule,\r\n    FormsModule\r\n  ],\r\n  providers: [\r\n    AppTextConfigService,\r\n    CamundaRestService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: HttpInterceptorService,\r\n      multi: true\r\n    },\r\n    AuthGuard,\r\n    AuthService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n    <a class=\"navbar-brand\" [routerLink]=\"'/home'\" >Documania WorkFlow</a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarText\">\r\n      <ul class=\"navbar-nav mr-auto\">\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link\" [routerLink]=\"'/home/upload'\">Télecharger une model <span class=\"sr-only\">(current)</span></a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" [routerLink]=\"'/home/start'\">Executer Proccess </a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" [routerLink]=\"'/home/tasks'\">Liste des taches</a>\r\n        </li>\r\n      </ul>\r\n      <!-- <span class=\"navbar-text\">\r\n        Navbar text with an inline element\r\n      </span> -->\r\n    </div>\r\n  </nav>\r\n\r\n\r\n  <div class=\"m-5\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AuthService } from '../../services/auth/auth.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  username: string;\r\n  password : string;\r\n  errorMessage = 'Invalid Credentials';\r\n  successMessage: string;\r\n  invalidLogin = false;\r\n  loginSuccess = false;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authenticationService: AuthService) {   }\r\n\r\n  ngOnInit() {\r\n  }\r\n  component = 'signin';\r\n  handleLogin() {\r\n    if(this.component===\"forgetpass\")\r\n    {\r\n      this.component = 'signin'\r\n    }\r\n    else{\r\n      this.authenticationService.authenticationService(this.username, this.password).subscribe((result)=> {\r\n        \r\n        // if(result['authenticated'])\r\n        // {\r\n          this.invalidLogin = false;\r\n          this.loginSuccess = true;\r\n\r\n          this.router.navigate(['/home/tasks']);\r\n          this.successMessage = 'Login Successful.';\r\n\r\n        // }\r\n        // else\r\n        // {\r\n        //   this.invalidLogin = false;\r\n        //   this.loginSuccess = true;\r\n        //   this.successMessage = 'Login Successful.';\r\n        // }\r\n      }, () => {\r\n        this.invalidLogin = true;\r\n        this.loginSuccess = false;\r\n      });\r\n    }\r\n  }\r\n  resetPass(){\r\n    if(this.component===\"signin\")\r\n    {\r\n      this.component = 'forgetpass'\r\n    }\r\n    else{\r\n\r\n\r\n      \r\n    }\r\n\r\n\r\n  }\r\n}\r\n\r\n\r\n","\r\n    <nav class=\"navbar navbar-light navbar-expand-lg fixed-top  clean-navbar\" style=\"     height: 80px; background-color: #021048;\">\r\n        <div class=\"container\">\r\n           \r\n               \r\n                \r\n        </div>\r\n    </nav><br><br>\r\n    <div>\r\n        <main class=\"page login-page\">\r\n            <section class=\"clean-block clean-form dark\" style=\"    padding-bottom: 65px;\">\r\n                <div class=\"container\" style=\"margin-top: 2.1em;\">\r\n                    <div class=\"block-heading pt-3\">\r\n                        <img src=\"assets/logo/logo-documania-certify-no-bg.png\" style=\"height: 180px;margin: 15px 1px;\" alt=\"Documania certify logo\">\r\n                    </div>\r\n                    <form style=\"border-radius: 20px;\" class=\"rounded-2\" *ngIf=\"component==='signin'\"> \r\n                        <div class=\"form-group\">\r\n                        <div *ngIf=\"invalidLogin\" class=\"alert alert-danger\">\r\n                            {{errorMessage}}\r\n                        </div>\r\n                        <div *ngIf=\"loginSuccess\" class=\"alert alert-success\">\r\n                            {{successMessage}}\r\n                        </div>\r\n                        <label for=\"username\">Nom d'utilisateur : </label>\r\n                        <input class=\"form-control item\" [(ngModel)]=\"username\" type=\"text\" [ngModelOptions]=\"{standalone: true}\" id=\"username\" name=\"username\">\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"password\">Mot de passe : </label>\r\n                        <input class=\"form-control\" type=\"password\" [(ngModel)]=\"password\" [ngModelOptions]=\"{standalone: true}\" id=\"password\" >\r\n                    </div>\r\n                    <button class=\"btn btn-primary btn-block\" (click)=\"handleLogin()\"> <i class=\"fas fa-sign-in-alt\"></i> Se connecter</button>\r\n                    <button class=\"btn btn-outline-primary btn-block\" (click)=\"resetPass()\">Mot de passe oublié</button>\r\n\r\n                </form>\r\n                    <form style=\"border-radius: 20px;\" class=\"rounded-2\" *ngIf=\"component==='forgetpass'\"> \r\n                        <div class=\"form-group\">\r\n                        <div *ngIf=\"invalidLogin\" class=\"alert alert-danger\">\r\n                            {{errorMessage}}\r\n                        </div>\r\n                        <div *ngIf=\"loginSuccess\" class=\"alert alert-success\">\r\n                            {{successMessage}}\r\n                        </div>\r\n                        <label for=\"username\">Nom d'utilisateur ou email : </label>\r\n                        <input class=\"form-control item\" [(ngModel)]=\"username\" type=\"text\" [ngModelOptions]=\"{standalone: true}\" id=\"username\" name=\"username\">\r\n                    </div>\r\n\r\n                    <button class=\"btn btn-primary btn-block\" (click)=\"handleLogin()\"> <i class=\"fas fa-sign-in-alt\"> </i>Se connecter</button>\r\n                    <button class=\"btn btn-outline-primary btn-block\" (click)=\"resetPass()\">{{this.component === 'forgetpass' ? 'Réinitialiser le mot de passe' : 'Mot de passe oublié ?'}}</button>\r\n\r\n                </form>\r\n                \r\n            </div>\r\n        </section>\r\n    </main>\r\n    <footer class=\"page-footer dark\" style=\"padding-top: 2.5em;    bottom: 0;\r\n    position: absolute;\r\n    width: 100%;\">\r\n        <div class=\"footer-copyright\">\r\n            <p>© 2020 VevioSys</p>\r\n        </div>\r\n    </footer>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CamundaRestService } from 'src/app/services/rest/camunda-rest.service';\n\n@Component({\n  selector: 'app-start-process',\n  templateUrl: './start-process.component.html',\n  styleUrls: ['./start-process.component.css']\n})\nexport class StartProcessComponent implements OnInit {\n\n  private processDefinitionKey: String = null;\n  private formKey: String = null;\n  private rootViewContainer = null;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private camundaRestService: CamundaRestService\n              ) { }\n\n  ngOnInit() {\n    if (this.route.params != null) {\n      this.route.params.subscribe(params => {\n        this.processDefinitionKey = params['processdefinitionkey'];\n        this.loadTaskKey();\n      });\n    }\n  }\n\n  loadTaskKey(): void {\n    this.camundaRestService.getProcessDefinitionTaskKey(this.processDefinitionKey)\n      .subscribe(formKey => {\n        this.formKey = formKey.key\n      });\n  }\n}\n","<p>start-process works!</p>\n","import { Component, OnInit } from '@angular/core';\r\nimport { CamundaRestService } from 'src/app/services/rest/camunda-rest.service';\r\n\r\n@Component({\r\n  selector: 'app-start',\r\n  templateUrl: './start.component.html',\r\n  styleUrls: ['./start.component.css']\r\n})\r\nexport class StartComponent implements OnInit {\r\n\r\n  processDefinitions;\r\n\r\n  constructor(private camundaRestService: CamundaRestService) { }\r\n\r\n  ngOnInit() {\r\n    this.getProcessDefinitions();\r\n  }\r\n\r\n  getProcessDefinitions(): void {\r\n    this.camundaRestService\r\n      .getProcessDefinitions()\r\n      .subscribe(processDefinitions => this.processDefinitions = processDefinitions);\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-3\">\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"h4 my-1\">\r\n                        La liste des proccessus :\r\n                    </div>\r\n                    <ul>\r\n                        <li *ngFor=\"let pd of this.processDefinitions\"> <a routerLink=\"process/{{pd.key}}\">{{ pd.name ? pd.name :pd.key }}</a> </li>\r\n                    </ul>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-6\">\r\n\r\n            <router-outlet></router-outlet>\r\n\r\n\r\n\r\n        </div>\r\n\r\n\r\n    </div>\r\n\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { CamundaRestService } from 'src/app/services/rest/camunda-rest.service';\r\n\r\n@Component({\r\n  selector: 'app-tasks',\r\n  templateUrl: './tasks.component.html',\r\n  styleUrls: ['./tasks.component.css']\r\n})\r\nexport class TasksComponent implements OnInit {\r\n\r\n   processDefinitions;\r\n\r\n  constructor(private camundaRestService: CamundaRestService) { }\r\n\r\n  ngOnInit() {\r\n    this.getProcessDefinitions();\r\n  }\r\n\r\n  getProcessDefinitions(): void {\r\n    this.camundaRestService\r\n      .getProcessDefinitions()\r\n      .subscribe(processDefinitions => this.processDefinitions = processDefinitions);\r\n  }\r\n}\r\n","<p>tasks works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CamundaRestService } from 'src/app/services/rest/camunda-rest.service';\r\n\r\n@Component({\r\n  selector: 'app-upload',\r\n  templateUrl: './upload.component.html',\r\n  styleUrls: ['./upload.component.css']\r\n})\r\nexport class UploadComponent implements OnInit {\r\n\r\n  private fileToUpload: File = null;\r\n  private SUCCESS: boolean = false;\r\n  \r\n  constructor(private camundaRestService: CamundaRestService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  handleFileInput(files: FileList) {\r\n    this.fileToUpload = files.item(0);\r\n    this.uploadFileToActivity();\r\n  }\r\n\r\n  uploadFileToActivity() {\r\n    this.camundaRestService.deployProcess(this.fileToUpload).subscribe(data => {\r\n      this.SUCCESS = true;\r\n      }, error => {\r\n        console.log(error);\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-6\">\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <h3 class=\"mb-3\">\r\n\r\n                        Télécharger une model.\r\n\r\n                    </h3>\r\n                    <div class=\"my-2\">\r\n\r\n                    </div>\r\n                    <form class=\"form\">\r\n                        <div class=\"input-group mb-3\">\r\n                            <div class=\"custom-file\">\r\n                                <input (change)=\"handleFileInput($event.target.files)\" type=\"file\" class=\"custom-file-input\" id=\"inputGroupFile02\">\r\n                                <label class=\"custom-file-label\" for=\"inputGroupFile02\" aria-describedby=\"inputGroupFileAddon02\">Choose file</label>\r\n                            </div>\r\n                            <div class=\"input-group-append\">\r\n                                <button (click)=\"uploadFileToActivity()\" class=\"btn btn-primary\">\r\n                               Télécharger\r\n                                \r\n                              </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n    </div>\r\n\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\n\r\nimport { AuthService } from '../services/auth/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n \r\n \r\n  constructor(private authService : AuthService,private route : Router){\r\n\r\n\r\n  }\r\n \r\n \r\n \r\n \r\n  canActivate() : boolean {\r\n  \r\n    if(this.authService.isUserLoggedIn())\r\n    return true;\r\n    else{\r\n      this.route.navigate(['login']);\r\n      return false;\r\n    }\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nconst BASE_AUTH_URL =environment.CAMUNDA_URL+\"identity/verify\"\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n\r\n\r\n  USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\r\n  AUTH_ATTRIBUTE_NAME = 'AUTH'\r\n\r\n  public username: String;\r\n  public password: String;\r\n  public id : String;\r\n\r\n  constructor(private http: HttpClient) {\r\n\r\n  }\r\n\r\n  authenticationService(username: String, password: String) {\r\n    return this.http.post<any>(BASE_AUTH_URL,\r\n      {username : username ,password : password },\r\n      { headers: { authorization: window.atob(this.createBasicAuthToken(username, password)) } }).pipe(map((res) => {\r\n\r\n        // if(res['authenticated'])\r\n        // {\r\n        this.username = username;\r\n        this.password = password;\r\n        this.id = res.authenticatedUser ;\r\n        this.registerSuccessfulLogin(username, password);\r\n        // }\r\n        \r\n        \r\n      }));\r\n  }\r\n\r\n  createBasicAuthToken(username: String, password: String) {\r\n    return window.btoa('Basic ' + window.btoa(username + \":\" + password))\r\n  }\r\n\r\n  registerSuccessfulLogin(username, password) {\r\n    sessionStorage.setItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME, username);\r\n    sessionStorage.setItem(this.AUTH_ATTRIBUTE_NAME,this.createBasicAuthToken(username,password));\r\n  }\r\n\r\n  logout() {\r\n    sessionStorage.removeItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME);\r\n    sessionStorage.removeItem(this.AUTH_ATTRIBUTE_NAME);\r\n    this.username = null;\r\n    this.password = null;\r\n\r\n  }\r\n\r\n  isUserLoggedIn() {\r\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\r\n    let auth = sessionStorage.getItem(this.AUTH_ATTRIBUTE_NAME)\r\n    \r\n    if (user === null || auth===null) \r\n    { this.logout()\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  getLoggedInUserName() {\r\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\r\n    if (user === null) return ''\r\n    return user\r\n  }\r\n\r\n  getUserAuth(userId)\r\n  {\r\n    const _userId = userId ?? sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n}\r\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\n\r\n\r\n@Injectable()\r\nexport class HttpInterceptorService implements HttpInterceptor {\r\n\r\n    constructor(private authenticationService: AuthService) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if (this.authenticationService.isUserLoggedIn() && req.url.indexOf('basicauth') === -1) {\r\n            const authReq = req.clone({\r\n                headers: new HttpHeaders({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `${window.atob(sessionStorage.getItem(this.authenticationService.AUTH_ATTRIBUTE_NAME))}`\r\n                })\r\n            });\r\n            return next.handle(authReq);\r\n        } else {\r\n            return next.handle(req);\r\n        }\r\n    }\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppTextConfigService {\r\n\r\n  constructor(private http:HttpClient) { }\r\n  public text : any={\r\n    homePage : {\r\n    title : \"\",\r\n    guide : [\r\n        \"\",\r\n        \"\",\r\n        \"\"\r\n    ],\r\n    btnLeft : \"\",\r\n    btnRight : \"\",\r\n    copyright : \"\"\r\n    \r\n\r\n\r\n  }\r\n   ,\r\n   ocr : {\r\n\r\n    ar :\"\",\r\n    en :\"\",\r\n    fr :\"\"\r\n   }\r\n};\r\n  public lang;\r\n  public isLoaded=false;\r\n  local=\"\"\r\n  getConfigLang()\r\n  {\r\n    \r\n    let p=localStorage.getItem(\"preferedlang\")??'fr';\r\n    if(p==\"ar\")\r\n    {\r\n      document.dir=\"rtl\"\r\n    }\r\n    this.lang=p\r\n    this.http.get<any>(\"assets/configs/documania-workflow-strings-\"+p+\".min.json\").subscribe(res=>{\r\n      \r\n      this.text=res.strings;\r\n      \r\n  })\r\n\r\n\r\n}\r\nchangeLanguage(lang)\r\n{\r\n  \r\n  return this.http.get<any>(\"assets/configs/documania-workflow-strings-\"+lang+\".min.json\")\r\n}\r\n\r\n\r\n\r\ngetLocalByLang():string{\r\nif(this.lang==\"ar\")\r\n  return \"ar-SA\"\r\nelse if(this.lang==\"en\")\r\nreturn \"en-US\"\r\nelse\r\nreturn \"fr-FR\"\r\n}\r\n\r\n}\r\n","import { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nlet BASE_URL = environment.CAMUNDA_URL\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CamundaRestService {\r\n\r\nprivate engineRestUrl;\r\n  constructor(private http:HttpClient) { \r\n    this.engineRestUrl = BASE_URL\r\n  }\r\n\r\n\r\n  getProcessDefinitionTaskKey(processDefinitionKey): Observable<any> {\r\n    const url = `${this.engineRestUrl}process-definition/key/${processDefinitionKey}/startForm`;\r\n    return this.http.get<any>(url).pipe(\r\n      tap(form => this.log(`fetched formkey`)),\r\n      catchError(this.handleError('getProcessDeifnitionFormKey', []))\r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\n  getProcessDefinitions(): Observable<any> {\r\n    return this.http.get<any>(this.engineRestUrl + 'process-definition?latestVersion=true').pipe(\r\n      tap(processDefinitions => this.log(`fetched processDefinitions`)),\r\n      catchError(this.handleError('getProcessDefinitions', []))\r\n    );\r\n  }\r\n\r\n  \r\n  deployProcess(fileToUpload: File): Observable<any> {\r\n    const endpoint = `${this.engineRestUrl}deployment/create`;\r\n    const formData = new FormData();\r\n\r\n\r\n    formData.append(\"deployment-name\",fileToUpload.name)\r\n    formData.append(\"enable-duplicate-filtering\",\"0\")\r\n    formData.append('*', fileToUpload);\r\n\r\n    return this.http.post(endpoint, formData);\r\n  }\r\n\r\n\r\n\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      this.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n  /** Log a HeroService message with the MessageService */\r\n  private log(message: string) {\r\n    console.log(message);\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  CAMUNDA_URL : \"http://localhost:8800/engine-rest/\"\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}