{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/services/auth.guard.ts","./src/app/services/auth/auth.service.ts","./src/app/services/auth/basic-auth-interceptor.service.ts","./src/app/services/i18n/app-text-config-service.service.ts","./src/app/services/rest/camunda-rest.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\n\n\nconst routes: Routes = [\n  {path :\"\", redirectTo:'/login',pathMatch: 'full'},\n  {path:\"login\",component:LoginComponent},\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'documaniaworkflow-front';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AppTextConfigService } from './services/i18n/app-text-config-service.service';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { LoginComponent } from './components/login/login.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HttpInterceptorService } from './services/auth/basic-auth-interceptor.service';\nimport { AuthGuard } from './services/auth.guard';\nimport { AuthService } from './services/auth/auth.service';\nimport { CamundaRestService } from './services/rest/camunda-rest.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    CommonModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [\n    AppTextConfigService,\n    CamundaRestService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpInterceptorService,\n      multi: true\n    },\n    AuthGuard,\n    AuthService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../services/auth/auth.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username: string;\n  password : string;\n  errorMessage = 'Invalid Credentials';\n  successMessage: string;\n  invalidLogin = false;\n  loginSuccess = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private authenticationService: AuthService) {   }\n\n  ngOnInit() {\n  }\n  component = 'signin';\n  handleLogin() {\n    if(this.component===\"forgetpass\")\n    {\n      this.component = 'signin'\n    }\n    else{\n      this.authenticationService.authenticationService(this.username, this.password).subscribe((result)=> {\n        this.invalidLogin = false;\n        this.loginSuccess = true;\n        this.successMessage = 'Login Successful.';\n        alert(\"Logged\")\n\n\n        this.router.navigate(['/certificates']);\n      }, () => {\n        this.invalidLogin = true;\n        this.loginSuccess = false;\n      });\n    }\n\n  }\n  resetPass(){\n    if(this.component===\"signin\")\n    {\n      this.component = 'forgetpass'\n    }\n    else{\n\n\n      \n    }\n\n\n  }\n}\n\n\n","\n    <nav class=\"navbar navbar-light navbar-expand-lg fixed-top  clean-navbar\" style=\"     height: 80px; background-color: #021048;\">\n        <div class=\"container\">\n           \n               \n                \n        </div>\n    </nav><br><br>\n    <div>\n        <main class=\"page login-page\">\n            <section class=\"clean-block clean-form dark\" style=\"    padding-bottom: 65px;\">\n                <div class=\"container\" style=\"margin-top: 2.1em;\">\n                    <div class=\"block-heading pt-3\">\n                        <img src=\"assets/logo/logo-documania-certify-no-bg.png\" style=\"height: 180px;margin: 15px 1px;\" alt=\"Documania certify logo\">\n                    </div>\n                    <form style=\"border-radius: 20px;\" class=\"rounded-2\" *ngIf=\"component==='signin'\"> \n                        <div class=\"form-group\">\n                        <div *ngIf=\"invalidLogin\" class=\"alert alert-danger\">\n                            {{errorMessage}}\n                        </div>\n                        <div *ngIf=\"loginSuccess\" class=\"alert alert-success\">\n                            {{successMessage}}\n                        </div>\n                        <label for=\"username\">Nom d'utilisateur : </label>\n                        <input class=\"form-control item\" [(ngModel)]=\"username\" type=\"text\" [ngModelOptions]=\"{standalone: true}\" id=\"username\" name=\"username\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"password\">Mot de passe : </label>\n                        <input class=\"form-control\" type=\"password\" [(ngModel)]=\"password\" [ngModelOptions]=\"{standalone: true}\" id=\"password\" >\n                    </div>\n                    <button class=\"btn btn-primary btn-block\" (click)=\"handleLogin()\"> <i class=\"fas fa-sign-in-alt\"></i> Se connecter</button>\n                    <button class=\"btn btn-outline-primary btn-block\" (click)=\"resetPass()\">Mot de passe oublié</button>\n\n                </form>\n                    <form style=\"border-radius: 20px;\" class=\"rounded-2\" *ngIf=\"component==='forgetpass'\"> \n                        <div class=\"form-group\">\n                        <div *ngIf=\"invalidLogin\" class=\"alert alert-danger\">\n                            {{errorMessage}}\n                        </div>\n                        <div *ngIf=\"loginSuccess\" class=\"alert alert-success\">\n                            {{successMessage}}\n                        </div>\n                        <label for=\"username\">Nom d'utilisateur ou email : </label>\n                        <input class=\"form-control item\" [(ngModel)]=\"username\" type=\"text\" [ngModelOptions]=\"{standalone: true}\" id=\"username\" name=\"username\">\n                    </div>\n\n                    <button class=\"btn btn-primary btn-block\" (click)=\"handleLogin()\"> <i class=\"fas fa-sign-in-alt\"> </i>Se connecter</button>\n                    <button class=\"btn btn-outline-primary btn-block\" (click)=\"resetPass()\">{{this.component === 'forgetpass' ? 'Réinitialiser le mot de passe' : 'Mot de passe oublié ?'}}</button>\n\n                </form>\n                \n            </div>\n        </section>\n    </main>\n    <footer class=\"page-footer dark\" style=\"padding-top: 2.5em;    bottom: 0;\n    position: absolute;\n    width: 100%;\">\n        <div class=\"footer-copyright\">\n            <p>© 2020 VevioSys</p>\n        </div>\n    </footer>\n\n</div>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\n\nimport { AuthService } from '../services/auth/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n \n \n  constructor(private authService : AuthService,private route : Router){\n\n\n  }\n \n \n \n \n  canActivate() : boolean {\n  \n    if(this.authService.isUserLoggedIn())\n    return true;\n    else{\n      this.route.navigate(['login']);\n      return false;\n    }\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\nconst BASE_AUTH_URL =environment.CAMUNDA_URL+\"/identity/verify\"\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n\n\n  USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\n  AUTH_ATTRIBUTE_NAME = 'AUTH'\n\n  public username: String;\n  public password: String;\n  public id : number;\n\n  constructor(private http: HttpClient) {\n\n  }\n\n  authenticationService(username: String, password: String) {\n    return this.http.post(BASE_AUTH_URL,\n      {username : username ,password : password },\n      { headers: { authorization: window.atob(this.createBasicAuthToken(username, password)) } }).pipe(map((res) => {\n        this.username = username;\n        this.password = password;\n        this.id = res as number;\n        \n        this.registerSuccessfulLogin(username, password);\n      }));\n  }\n\n  createBasicAuthToken(username: String, password: String) {\n    return window.btoa('Basic ' + window.btoa(username + \":\" + password))\n  }\n\n  registerSuccessfulLogin(username, password) {\n    sessionStorage.setItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME, username);\n    sessionStorage.setItem(this.AUTH_ATTRIBUTE_NAME,this.createBasicAuthToken(username,password));\n  }\n\n  logout() {\n    sessionStorage.removeItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME);\n    sessionStorage.removeItem(this.AUTH_ATTRIBUTE_NAME);\n    this.username = null;\n    this.password = null;\n\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    let auth = sessionStorage.getItem(this.AUTH_ATTRIBUTE_NAME)\n    \n    if (user === null || auth===null) \n    { this.logout()\n      return false\n    }\n    return true\n  }\n\n  getLoggedInUserName() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return ''\n    return user\n  }\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n\n@Injectable()\nexport class HttpInterceptorService implements HttpInterceptor {\n\n    constructor(private authenticationService: AuthService) { }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        if (this.authenticationService.isUserLoggedIn() && req.url.indexOf('basicauth') === -1) {\n            const authReq = req.clone({\n                headers: new HttpHeaders({\n                    'Content-Type': 'application/json',\n                    'Authorization': `${window.atob(sessionStorage.getItem(this.authenticationService.AUTH_ATTRIBUTE_NAME))}`\n                })\n            });\n            return next.handle(authReq);\n        } else {\n            return next.handle(req);\n        }\n    }\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppTextConfigService {\n\n  constructor(private http:HttpClient) { }\n  public text : any={\n    homePage : {\n    title : \"\",\n    guide : [\n        \"\",\n        \"\",\n        \"\"\n    ],\n    btnLeft : \"\",\n    btnRight : \"\",\n    copyright : \"\"\n    \n\n\n  }\n   ,\n   ocr : {\n\n    ar :\"\",\n    en :\"\",\n    fr :\"\"\n   }\n};\n  public lang;\n  public isLoaded=false;\n  local=\"\"\n  getConfigLang()\n  {\n    \n    let p=localStorage.getItem(\"preferedlang\")??'fr';\n    if(p==\"ar\")\n    {\n      document.dir=\"rtl\"\n    }\n    this.lang=p\n    this.http.get<any>(\"assets/configs/documania-workflow-strings-\"+p+\".min.json\").subscribe(res=>{\n      \n      this.text=res.strings;\n      \n  })\n\n\n}\nchangeLanguage(lang)\n{\n  \n  return this.http.get<any>(\"assets/configs/documania-workflow-strings-\"+lang+\".min.json\")\n}\n\n\n\ngetLocalByLang():string{\nif(this.lang==\"ar\")\n  return \"ar-SA\"\nelse if(this.lang==\"en\")\nreturn \"en-US\"\nelse\nreturn \"fr-FR\"\n}\n\n}\n","import { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\nlet BASE_URL = environment.CAMUNDA_URL\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CamundaRestService {\n\n  constructor(private http:HttpClient) { \n\n  }\n\n\n\n\n\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  CAMUNDA_URL : \"http://localhost:8800/engine-rest\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}