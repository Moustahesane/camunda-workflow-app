{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/services/auth.guard.ts","webpack:///src/app/services/auth/auth.service.ts","webpack:///src/app/services/auth/basic-auth-interceptor.service.ts","webpack:///src/app/services/i18n/app-text-config-service.service.ts","webpack:///src/app/services/rest/camunda-rest.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","LoginComponent","route","router","authenticationService","errorMessage","invalidLogin","loginSuccess","username","password","subscribe","result","successMessage","alert","navigate","AuthGuard","authService","isUserLoggedIn","providedIn","BASE_AUTH_URL","CAMUNDA_URL","AuthService","http","USER_NAME_SESSION_ATTRIBUTE_NAME","AUTH_ATTRIBUTE_NAME","post","headers","authorization","window","atob","createBasicAuthToken","pipe","res","registerSuccessfulLogin","btoa","sessionStorage","setItem","removeItem","user","getItem","auth","logout","HttpInterceptorService","next","url","indexOf","authReq","clone","handle","AppTextConfigService","text","homePage","guide","btnLeft","btnRight","copyright","ocr","ar","en","fr","isLoaded","local","p","localStorage","document","dir","lang","get","strings","BASE_URL","CamundaRestService","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\n\n\nconst routes: Routes = [\n  {path :\"\", redirectTo:'/login',pathMatch: 'full'},\n  {path:\"login\",component:LoginComponent},\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'documaniaworkflow-front';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AppTextConfigService } from './services/i18n/app-text-config-service.service';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { LoginComponent } from './components/login/login.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HttpInterceptorService } from './services/auth/basic-auth-interceptor.service';\nimport { AuthGuard } from './services/auth.guard';\nimport { AuthService } from './services/auth/auth.service';\nimport { CamundaRestService } from './services/rest/camunda-rest.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    CommonModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [\n    AppTextConfigService,\n    CamundaRestService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpInterceptorService,\n      multi: true\n    },\n    AuthGuard,\n    AuthService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../services/auth/auth.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username: string;\n  password : string;\n  errorMessage = 'Invalid Credentials';\n  successMessage: string;\n  invalidLogin = false;\n  loginSuccess = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private authenticationService: AuthService) {   }\n\n  ngOnInit() {\n  }\n  component = 'signin';\n  handleLogin() {\n    if(this.component===\"forgetpass\")\n    {\n      this.component = 'signin'\n    }\n    else{\n      this.authenticationService.authenticationService(this.username, this.password).subscribe((result)=> {\n        this.invalidLogin = false;\n        this.loginSuccess = true;\n        this.successMessage = 'Login Successful.';\n        alert(\"Logged\")\n\n\n        this.router.navigate(['/certificates']);\n      }, () => {\n        this.invalidLogin = true;\n        this.loginSuccess = false;\n      });\n    }\n\n  }\n  resetPass(){\n    if(this.component===\"signin\")\n    {\n      this.component = 'forgetpass'\n    }\n    else{\n\n\n      \n    }\n\n\n  }\n}\n\n\n","\n    <nav class=\"navbar navbar-light navbar-expand-lg fixed-top  clean-navbar\" style=\"     height: 80px; background-color: #021048;\">\n        <div class=\"container\">\n           \n               \n                \n        </div>\n    </nav><br><br>\n    <div>\n        <main class=\"page login-page\">\n            <section class=\"clean-block clean-form dark\" style=\"    padding-bottom: 65px;\">\n                <div class=\"container\" style=\"margin-top: 2.1em;\">\n                    <div class=\"block-heading pt-3\">\n                        <img src=\"assets/logo/logo-documania-certify-no-bg.png\" style=\"height: 180px;margin: 15px 1px;\" alt=\"Documania certify logo\">\n                    </div>\n                    <form style=\"border-radius: 20px;\" class=\"rounded-2\" *ngIf=\"component==='signin'\"> \n                        <div class=\"form-group\">\n                        <div *ngIf=\"invalidLogin\" class=\"alert alert-danger\">\n                            {{errorMessage}}\n                        </div>\n                        <div *ngIf=\"loginSuccess\" class=\"alert alert-success\">\n                            {{successMessage}}\n                        </div>\n                        <label for=\"username\">Nom d'utilisateur : </label>\n                        <input class=\"form-control item\" [(ngModel)]=\"username\" type=\"text\" [ngModelOptions]=\"{standalone: true}\" id=\"username\" name=\"username\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"password\">Mot de passe : </label>\n                        <input class=\"form-control\" type=\"password\" [(ngModel)]=\"password\" [ngModelOptions]=\"{standalone: true}\" id=\"password\" >\n                    </div>\n                    <button class=\"btn btn-primary btn-block\" (click)=\"handleLogin()\"> <i class=\"fas fa-sign-in-alt\"></i> Se connecter</button>\n                    <button class=\"btn btn-outline-primary btn-block\" (click)=\"resetPass()\">Mot de passe oublié</button>\n\n                </form>\n                    <form style=\"border-radius: 20px;\" class=\"rounded-2\" *ngIf=\"component==='forgetpass'\"> \n                        <div class=\"form-group\">\n                        <div *ngIf=\"invalidLogin\" class=\"alert alert-danger\">\n                            {{errorMessage}}\n                        </div>\n                        <div *ngIf=\"loginSuccess\" class=\"alert alert-success\">\n                            {{successMessage}}\n                        </div>\n                        <label for=\"username\">Nom d'utilisateur ou email : </label>\n                        <input class=\"form-control item\" [(ngModel)]=\"username\" type=\"text\" [ngModelOptions]=\"{standalone: true}\" id=\"username\" name=\"username\">\n                    </div>\n\n                    <button class=\"btn btn-primary btn-block\" (click)=\"handleLogin()\"> <i class=\"fas fa-sign-in-alt\"> </i>Se connecter</button>\n                    <button class=\"btn btn-outline-primary btn-block\" (click)=\"resetPass()\">{{this.component === 'forgetpass' ? 'Réinitialiser le mot de passe' : 'Mot de passe oublié ?'}}</button>\n\n                </form>\n                \n            </div>\n        </section>\n    </main>\n    <footer class=\"page-footer dark\" style=\"padding-top: 2.5em;    bottom: 0;\n    position: absolute;\n    width: 100%;\">\n        <div class=\"footer-copyright\">\n            <p>© 2020 VevioSys</p>\n        </div>\n    </footer>\n\n</div>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\n\nimport { AuthService } from '../services/auth/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n \n \n  constructor(private authService : AuthService,private route : Router){\n\n\n  }\n \n \n \n \n  canActivate() : boolean {\n  \n    if(this.authService.isUserLoggedIn())\n    return true;\n    else{\n      this.route.navigate(['login']);\n      return false;\n    }\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\nconst BASE_AUTH_URL =environment.CAMUNDA_URL+\"/identity/verify\"\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n\n\n  USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\n  AUTH_ATTRIBUTE_NAME = 'AUTH'\n\n  public username: String;\n  public password: String;\n  public id : number;\n\n  constructor(private http: HttpClient) {\n\n  }\n\n  authenticationService(username: String, password: String) {\n    return this.http.post(BASE_AUTH_URL,\n      {username : username ,password : password },\n      { headers: { authorization: window.atob(this.createBasicAuthToken(username, password)) } }).pipe(map((res) => {\n        this.username = username;\n        this.password = password;\n        this.id = res as number;\n        \n        this.registerSuccessfulLogin(username, password);\n      }));\n  }\n\n  createBasicAuthToken(username: String, password: String) {\n    return window.btoa('Basic ' + window.btoa(username + \":\" + password))\n  }\n\n  registerSuccessfulLogin(username, password) {\n    sessionStorage.setItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME, username);\n    sessionStorage.setItem(this.AUTH_ATTRIBUTE_NAME,this.createBasicAuthToken(username,password));\n  }\n\n  logout() {\n    sessionStorage.removeItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME);\n    sessionStorage.removeItem(this.AUTH_ATTRIBUTE_NAME);\n    this.username = null;\n    this.password = null;\n\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    let auth = sessionStorage.getItem(this.AUTH_ATTRIBUTE_NAME)\n    \n    if (user === null || auth===null) \n    { this.logout()\n      return false\n    }\n    return true\n  }\n\n  getLoggedInUserName() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return ''\n    return user\n  }\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n\n@Injectable()\nexport class HttpInterceptorService implements HttpInterceptor {\n\n    constructor(private authenticationService: AuthService) { }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        if (this.authenticationService.isUserLoggedIn() && req.url.indexOf('basicauth') === -1) {\n            const authReq = req.clone({\n                headers: new HttpHeaders({\n                    'Content-Type': 'application/json',\n                    'Authorization': `${window.atob(sessionStorage.getItem(this.authenticationService.AUTH_ATTRIBUTE_NAME))}`\n                })\n            });\n            return next.handle(authReq);\n        } else {\n            return next.handle(req);\n        }\n    }\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppTextConfigService {\n\n  constructor(private http:HttpClient) { }\n  public text : any={\n    homePage : {\n    title : \"\",\n    guide : [\n        \"\",\n        \"\",\n        \"\"\n    ],\n    btnLeft : \"\",\n    btnRight : \"\",\n    copyright : \"\"\n    \n\n\n  }\n   ,\n   ocr : {\n\n    ar :\"\",\n    en :\"\",\n    fr :\"\"\n   }\n};\n  public lang;\n  public isLoaded=false;\n  local=\"\"\n  getConfigLang()\n  {\n    \n    let p=localStorage.getItem(\"preferedlang\")??'fr';\n    if(p==\"ar\")\n    {\n      document.dir=\"rtl\"\n    }\n    this.lang=p\n    this.http.get<any>(\"assets/configs/documania-workflow-strings-\"+p+\".min.json\").subscribe(res=>{\n      \n      this.text=res.strings;\n      \n  })\n\n\n}\nchangeLanguage(lang)\n{\n  \n  return this.http.get<any>(\"assets/configs/documania-workflow-strings-\"+lang+\".min.json\")\n}\n\n\n\ngetLocalByLang():string{\nif(this.lang==\"ar\")\n  return \"ar-SA\"\nelse if(this.lang==\"en\")\nreturn \"en-US\"\nelse\nreturn \"fr-FR\"\n}\n\n}\n","import { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\nlet BASE_URL = environment.CAMUNDA_URL\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CamundaRestService {\n\n  constructor(private http:HttpClient) { \n\n  }\n\n\n\n\n\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  CAMUNDA_URL : \"http://localhost:8800/engine-rest\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}