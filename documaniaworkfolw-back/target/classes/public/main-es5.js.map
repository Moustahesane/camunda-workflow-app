{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/start-process/start-process.component.ts","webpack:///src/app/components/start-process/start-process.component.html","webpack:///src/app/components/start/start.component.ts","webpack:///src/app/components/start/start.component.html","webpack:///src/app/components/tasks/tasks.component.ts","webpack:///src/app/components/tasks/tasks.component.html","webpack:///src/app/components/upload/upload.component.ts","webpack:///src/app/components/upload/upload.component.html","webpack:///src/app/services/auth.guard.ts","webpack:///src/app/services/auth/auth.service.ts","webpack:///src/app/services/auth/basic-auth-interceptor.service.ts","webpack:///src/app/services/i18n/app-text-config-service.service.ts","webpack:///src/app/services/rest/camunda-rest.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","children","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","HomeComponent","LoginComponent","route","router","authenticationService","errorMessage","invalidLogin","loginSuccess","username","password","subscribe","result","navigate","successMessage","StartProcessComponent","camundaRestService","processDefinitionKey","formKey","rootViewContainer","params","loadTaskKey","getProcessDefinitionTaskKey","key","StartComponent","getProcessDefinitions","processDefinitions","TasksComponent","UploadComponent","fileToUpload","SUCCESS","files","item","uploadFileToActivity","deployProcess","data","error","console","log","handleFileInput","AuthGuard","authService","isUserLoggedIn","providedIn","BASE_AUTH_URL","CAMUNDA_URL","AuthService","http","USER_NAME_SESSION_ATTRIBUTE_NAME","AUTH_ATTRIBUTE_NAME","post","headers","authorization","window","atob","createBasicAuthToken","pipe","res","authenticatedUser","registerSuccessfulLogin","btoa","sessionStorage","setItem","removeItem","user","getItem","auth","logout","userId","_userId","HttpInterceptorService","next","url","indexOf","authReq","clone","handle","AppTextConfigService","text","homePage","guide","btnLeft","btnRight","copyright","ocr","ar","en","fr","isLoaded","local","p","localStorage","document","dir","lang","get","strings","BASE_URL","CamundaRestService","engineRestUrl","form","handleError","endpoint","formData","FormData","append","name","operation","message","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { StartProcessComponent } from './components/start-process/start-process.component';\r\nimport { StartComponent } from './components/start/start.component';\r\nimport { TasksComponent } from './components/tasks/tasks.component';\r\nimport { UploadComponent } from './components/upload/upload.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: \"\", redirectTo: '/login', pathMatch: 'full' },\r\n  { path: \"login\", component: LoginComponent },\r\n  {\r\n    path: \"home\", component: HomeComponent, children: [\r\n      { path: \"upload\", component: UploadComponent },\r\n      { path: \"start\", component: StartComponent ,children : [\r\n        {path: \"process/:processdefinitionkey\", component: StartProcessComponent}\r\n      ] },\r\n      { path: \"tasks\", component: TasksComponent }\r\n\r\n\r\n\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'documaniaworkflow-front';\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AppTextConfigService } from './services/i18n/app-text-config-service.service';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { HttpInterceptorService } from './services/auth/basic-auth-interceptor.service';\r\nimport { AuthGuard } from './services/auth.guard';\r\nimport { AuthService } from './services/auth/auth.service';\r\nimport { CamundaRestService } from './services/rest/camunda-rest.service';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { UploadComponent } from './components/upload/upload.component';\r\nimport { StartComponent } from './components/start/start.component';\r\nimport { TasksComponent } from './components/tasks/tasks.component';\nimport { StartProcessComponent } from './components/start-process/start-process.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    UploadComponent,\r\n    StartComponent,\r\n    TasksComponent,\r\n    StartProcessComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    NgbModule,\r\n    CommonModule,\r\n    HttpClientModule,\r\n    FormsModule\r\n  ],\r\n  providers: [\r\n    AppTextConfigService,\r\n    CamundaRestService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: HttpInterceptorService,\r\n      multi: true\r\n    },\r\n    AuthGuard,\r\n    AuthService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n    <a class=\"navbar-brand\" [routerLink]=\"'/home'\" >Documania WorkFlow</a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarText\">\r\n      <ul class=\"navbar-nav mr-auto\">\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link\" [routerLink]=\"'/home/upload'\">Télecharger une model <span class=\"sr-only\">(current)</span></a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" [routerLink]=\"'/home/start'\">Executer Proccess </a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" [routerLink]=\"'/home/tasks'\">Liste des taches</a>\r\n        </li>\r\n      </ul>\r\n      <!-- <span class=\"navbar-text\">\r\n        Navbar text with an inline element\r\n      </span> -->\r\n    </div>\r\n  </nav>\r\n\r\n\r\n  <div class=\"m-5\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AuthService } from '../../services/auth/auth.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  username: string;\r\n  password : string;\r\n  errorMessage = 'Invalid Credentials';\r\n  successMessage: string;\r\n  invalidLogin = false;\r\n  loginSuccess = false;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authenticationService: AuthService) {   }\r\n\r\n  ngOnInit() {\r\n  }\r\n  component = 'signin';\r\n  handleLogin() {\r\n    if(this.component===\"forgetpass\")\r\n    {\r\n      this.component = 'signin'\r\n    }\r\n    else{\r\n      this.authenticationService.authenticationService(this.username, this.password).subscribe((result)=> {\r\n        \r\n        // if(result['authenticated'])\r\n        // {\r\n          this.invalidLogin = false;\r\n          this.loginSuccess = true;\r\n\r\n          this.router.navigate(['/home/tasks']);\r\n          this.successMessage = 'Login Successful.';\r\n\r\n        // }\r\n        // else\r\n        // {\r\n        //   this.invalidLogin = false;\r\n        //   this.loginSuccess = true;\r\n        //   this.successMessage = 'Login Successful.';\r\n        // }\r\n      }, () => {\r\n        this.invalidLogin = true;\r\n        this.loginSuccess = false;\r\n      });\r\n    }\r\n  }\r\n  resetPass(){\r\n    if(this.component===\"signin\")\r\n    {\r\n      this.component = 'forgetpass'\r\n    }\r\n    else{\r\n\r\n\r\n      \r\n    }\r\n\r\n\r\n  }\r\n}\r\n\r\n\r\n","\r\n    <nav class=\"navbar navbar-light navbar-expand-lg fixed-top  clean-navbar\" style=\"     height: 80px; background-color: #021048;\">\r\n        <div class=\"container\">\r\n           \r\n               \r\n                \r\n        </div>\r\n    </nav><br><br>\r\n    <div>\r\n        <main class=\"page login-page\">\r\n            <section class=\"clean-block clean-form dark\" style=\"    padding-bottom: 65px;\">\r\n                <div class=\"container\" style=\"margin-top: 2.1em;\">\r\n                    <div class=\"block-heading pt-3\">\r\n                        <img src=\"assets/logo/logo-documania-certify-no-bg.png\" style=\"height: 180px;margin: 15px 1px;\" alt=\"Documania certify logo\">\r\n                    </div>\r\n                    <form style=\"border-radius: 20px;\" class=\"rounded-2\" *ngIf=\"component==='signin'\"> \r\n                        <div class=\"form-group\">\r\n                        <div *ngIf=\"invalidLogin\" class=\"alert alert-danger\">\r\n                            {{errorMessage}}\r\n                        </div>\r\n                        <div *ngIf=\"loginSuccess\" class=\"alert alert-success\">\r\n                            {{successMessage}}\r\n                        </div>\r\n                        <label for=\"username\">Nom d'utilisateur : </label>\r\n                        <input class=\"form-control item\" [(ngModel)]=\"username\" type=\"text\" [ngModelOptions]=\"{standalone: true}\" id=\"username\" name=\"username\">\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"password\">Mot de passe : </label>\r\n                        <input class=\"form-control\" type=\"password\" [(ngModel)]=\"password\" [ngModelOptions]=\"{standalone: true}\" id=\"password\" >\r\n                    </div>\r\n                    <button class=\"btn btn-primary btn-block\" (click)=\"handleLogin()\"> <i class=\"fas fa-sign-in-alt\"></i> Se connecter</button>\r\n                    <button class=\"btn btn-outline-primary btn-block\" (click)=\"resetPass()\">Mot de passe oublié</button>\r\n\r\n                </form>\r\n                    <form style=\"border-radius: 20px;\" class=\"rounded-2\" *ngIf=\"component==='forgetpass'\"> \r\n                        <div class=\"form-group\">\r\n                        <div *ngIf=\"invalidLogin\" class=\"alert alert-danger\">\r\n                            {{errorMessage}}\r\n                        </div>\r\n                        <div *ngIf=\"loginSuccess\" class=\"alert alert-success\">\r\n                            {{successMessage}}\r\n                        </div>\r\n                        <label for=\"username\">Nom d'utilisateur ou email : </label>\r\n                        <input class=\"form-control item\" [(ngModel)]=\"username\" type=\"text\" [ngModelOptions]=\"{standalone: true}\" id=\"username\" name=\"username\">\r\n                    </div>\r\n\r\n                    <button class=\"btn btn-primary btn-block\" (click)=\"handleLogin()\"> <i class=\"fas fa-sign-in-alt\"> </i>Se connecter</button>\r\n                    <button class=\"btn btn-outline-primary btn-block\" (click)=\"resetPass()\">{{this.component === 'forgetpass' ? 'Réinitialiser le mot de passe' : 'Mot de passe oublié ?'}}</button>\r\n\r\n                </form>\r\n                \r\n            </div>\r\n        </section>\r\n    </main>\r\n    <footer class=\"page-footer dark\" style=\"padding-top: 2.5em;    bottom: 0;\r\n    position: absolute;\r\n    width: 100%;\">\r\n        <div class=\"footer-copyright\">\r\n            <p>© 2020 VevioSys</p>\r\n        </div>\r\n    </footer>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CamundaRestService } from 'src/app/services/rest/camunda-rest.service';\n\n@Component({\n  selector: 'app-start-process',\n  templateUrl: './start-process.component.html',\n  styleUrls: ['./start-process.component.css']\n})\nexport class StartProcessComponent implements OnInit {\n\n  private processDefinitionKey: String = null;\n  private formKey: String = null;\n  private rootViewContainer = null;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private camundaRestService: CamundaRestService\n              ) { }\n\n  ngOnInit() {\n    if (this.route.params != null) {\n      this.route.params.subscribe(params => {\n        this.processDefinitionKey = params['processdefinitionkey'];\n        this.loadTaskKey();\n      });\n    }\n  }\n\n  loadTaskKey(): void {\n    this.camundaRestService.getProcessDefinitionTaskKey(this.processDefinitionKey)\n      .subscribe(formKey => {\n        this.formKey = formKey.key\n      });\n  }\n}\n","<p>start-process works!</p>\n","import { Component, OnInit } from '@angular/core';\r\nimport { CamundaRestService } from 'src/app/services/rest/camunda-rest.service';\r\n\r\n@Component({\r\n  selector: 'app-start',\r\n  templateUrl: './start.component.html',\r\n  styleUrls: ['./start.component.css']\r\n})\r\nexport class StartComponent implements OnInit {\r\n\r\n  processDefinitions;\r\n\r\n  constructor(private camundaRestService: CamundaRestService) { }\r\n\r\n  ngOnInit() {\r\n    this.getProcessDefinitions();\r\n  }\r\n\r\n  getProcessDefinitions(): void {\r\n    this.camundaRestService\r\n      .getProcessDefinitions()\r\n      .subscribe(processDefinitions => this.processDefinitions = processDefinitions);\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-3\">\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"h4 my-1\">\r\n                        La liste des proccessus :\r\n                    </div>\r\n                    <ul>\r\n                        <li *ngFor=\"let pd of this.processDefinitions\"> <a routerLink=\"process/{{pd.key}}\">{{ pd.name ? pd.name :pd.key }}</a> </li>\r\n                    </ul>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-6\">\r\n\r\n            <router-outlet></router-outlet>\r\n\r\n\r\n\r\n        </div>\r\n\r\n\r\n    </div>\r\n\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { CamundaRestService } from 'src/app/services/rest/camunda-rest.service';\r\n\r\n@Component({\r\n  selector: 'app-tasks',\r\n  templateUrl: './tasks.component.html',\r\n  styleUrls: ['./tasks.component.css']\r\n})\r\nexport class TasksComponent implements OnInit {\r\n\r\n   processDefinitions;\r\n\r\n  constructor(private camundaRestService: CamundaRestService) { }\r\n\r\n  ngOnInit() {\r\n    this.getProcessDefinitions();\r\n  }\r\n\r\n  getProcessDefinitions(): void {\r\n    this.camundaRestService\r\n      .getProcessDefinitions()\r\n      .subscribe(processDefinitions => this.processDefinitions = processDefinitions);\r\n  }\r\n}\r\n","<p>tasks works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CamundaRestService } from 'src/app/services/rest/camunda-rest.service';\r\n\r\n@Component({\r\n  selector: 'app-upload',\r\n  templateUrl: './upload.component.html',\r\n  styleUrls: ['./upload.component.css']\r\n})\r\nexport class UploadComponent implements OnInit {\r\n\r\n  private fileToUpload: File = null;\r\n  private SUCCESS: boolean = false;\r\n  \r\n  constructor(private camundaRestService: CamundaRestService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  handleFileInput(files: FileList) {\r\n    this.fileToUpload = files.item(0);\r\n    this.uploadFileToActivity();\r\n  }\r\n\r\n  uploadFileToActivity() {\r\n    this.camundaRestService.deployProcess(this.fileToUpload).subscribe(data => {\r\n      this.SUCCESS = true;\r\n      }, error => {\r\n        console.log(error);\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-6\">\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <h3 class=\"mb-3\">\r\n\r\n                        Télécharger une model.\r\n\r\n                    </h3>\r\n                    <div class=\"my-2\">\r\n\r\n                    </div>\r\n                    <form class=\"form\">\r\n                        <div class=\"input-group mb-3\">\r\n                            <div class=\"custom-file\">\r\n                                <input (change)=\"handleFileInput($event.target.files)\" type=\"file\" class=\"custom-file-input\" id=\"inputGroupFile02\">\r\n                                <label class=\"custom-file-label\" for=\"inputGroupFile02\" aria-describedby=\"inputGroupFileAddon02\">Choose file</label>\r\n                            </div>\r\n                            <div class=\"input-group-append\">\r\n                                <button (click)=\"uploadFileToActivity()\" class=\"btn btn-primary\">\r\n                               Télécharger\r\n                                \r\n                              </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n    </div>\r\n\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\n\r\nimport { AuthService } from '../services/auth/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n \r\n \r\n  constructor(private authService : AuthService,private route : Router){\r\n\r\n\r\n  }\r\n \r\n \r\n \r\n \r\n  canActivate() : boolean {\r\n  \r\n    if(this.authService.isUserLoggedIn())\r\n    return true;\r\n    else{\r\n      this.route.navigate(['login']);\r\n      return false;\r\n    }\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nconst BASE_AUTH_URL =environment.CAMUNDA_URL+\"identity/verify\"\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n\r\n\r\n  USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\r\n  AUTH_ATTRIBUTE_NAME = 'AUTH'\r\n\r\n  public username: String;\r\n  public password: String;\r\n  public id : String;\r\n\r\n  constructor(private http: HttpClient) {\r\n\r\n  }\r\n\r\n  authenticationService(username: String, password: String) {\r\n    return this.http.post<any>(BASE_AUTH_URL,\r\n      {username : username ,password : password },\r\n      { headers: { authorization: window.atob(this.createBasicAuthToken(username, password)) } }).pipe(map((res) => {\r\n\r\n        // if(res['authenticated'])\r\n        // {\r\n        this.username = username;\r\n        this.password = password;\r\n        this.id = res.authenticatedUser ;\r\n        this.registerSuccessfulLogin(username, password);\r\n        // }\r\n        \r\n        \r\n      }));\r\n  }\r\n\r\n  createBasicAuthToken(username: String, password: String) {\r\n    return window.btoa('Basic ' + window.btoa(username + \":\" + password))\r\n  }\r\n\r\n  registerSuccessfulLogin(username, password) {\r\n    sessionStorage.setItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME, username);\r\n    sessionStorage.setItem(this.AUTH_ATTRIBUTE_NAME,this.createBasicAuthToken(username,password));\r\n  }\r\n\r\n  logout() {\r\n    sessionStorage.removeItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME);\r\n    sessionStorage.removeItem(this.AUTH_ATTRIBUTE_NAME);\r\n    this.username = null;\r\n    this.password = null;\r\n\r\n  }\r\n\r\n  isUserLoggedIn() {\r\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\r\n    let auth = sessionStorage.getItem(this.AUTH_ATTRIBUTE_NAME)\r\n    \r\n    if (user === null || auth===null) \r\n    { this.logout()\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  getLoggedInUserName() {\r\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\r\n    if (user === null) return ''\r\n    return user\r\n  }\r\n\r\n  getUserAuth(userId)\r\n  {\r\n    const _userId = userId ?? sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n}\r\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\n\r\n\r\n@Injectable()\r\nexport class HttpInterceptorService implements HttpInterceptor {\r\n\r\n    constructor(private authenticationService: AuthService) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if (this.authenticationService.isUserLoggedIn() && req.url.indexOf('basicauth') === -1) {\r\n            const authReq = req.clone({\r\n                headers: new HttpHeaders({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `${window.atob(sessionStorage.getItem(this.authenticationService.AUTH_ATTRIBUTE_NAME))}`\r\n                })\r\n            });\r\n            return next.handle(authReq);\r\n        } else {\r\n            return next.handle(req);\r\n        }\r\n    }\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppTextConfigService {\r\n\r\n  constructor(private http:HttpClient) { }\r\n  public text : any={\r\n    homePage : {\r\n    title : \"\",\r\n    guide : [\r\n        \"\",\r\n        \"\",\r\n        \"\"\r\n    ],\r\n    btnLeft : \"\",\r\n    btnRight : \"\",\r\n    copyright : \"\"\r\n    \r\n\r\n\r\n  }\r\n   ,\r\n   ocr : {\r\n\r\n    ar :\"\",\r\n    en :\"\",\r\n    fr :\"\"\r\n   }\r\n};\r\n  public lang;\r\n  public isLoaded=false;\r\n  local=\"\"\r\n  getConfigLang()\r\n  {\r\n    \r\n    let p=localStorage.getItem(\"preferedlang\")??'fr';\r\n    if(p==\"ar\")\r\n    {\r\n      document.dir=\"rtl\"\r\n    }\r\n    this.lang=p\r\n    this.http.get<any>(\"assets/configs/documania-workflow-strings-\"+p+\".min.json\").subscribe(res=>{\r\n      \r\n      this.text=res.strings;\r\n      \r\n  })\r\n\r\n\r\n}\r\nchangeLanguage(lang)\r\n{\r\n  \r\n  return this.http.get<any>(\"assets/configs/documania-workflow-strings-\"+lang+\".min.json\")\r\n}\r\n\r\n\r\n\r\ngetLocalByLang():string{\r\nif(this.lang==\"ar\")\r\n  return \"ar-SA\"\r\nelse if(this.lang==\"en\")\r\nreturn \"en-US\"\r\nelse\r\nreturn \"fr-FR\"\r\n}\r\n\r\n}\r\n","import { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nlet BASE_URL = environment.CAMUNDA_URL\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CamundaRestService {\r\n\r\nprivate engineRestUrl;\r\n  constructor(private http:HttpClient) { \r\n    this.engineRestUrl = BASE_URL\r\n  }\r\n\r\n\r\n  getProcessDefinitionTaskKey(processDefinitionKey): Observable<any> {\r\n    const url = `${this.engineRestUrl}process-definition/key/${processDefinitionKey}/startForm`;\r\n    return this.http.get<any>(url).pipe(\r\n      tap(form => this.log(`fetched formkey`)),\r\n      catchError(this.handleError('getProcessDeifnitionFormKey', []))\r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\n  getProcessDefinitions(): Observable<any> {\r\n    return this.http.get<any>(this.engineRestUrl + 'process-definition?latestVersion=true').pipe(\r\n      tap(processDefinitions => this.log(`fetched processDefinitions`)),\r\n      catchError(this.handleError('getProcessDefinitions', []))\r\n    );\r\n  }\r\n\r\n  \r\n  deployProcess(fileToUpload: File): Observable<any> {\r\n    const endpoint = `${this.engineRestUrl}deployment/create`;\r\n    const formData = new FormData();\r\n\r\n\r\n    formData.append(\"deployment-name\",fileToUpload.name)\r\n    formData.append(\"enable-duplicate-filtering\",\"0\")\r\n    formData.append('*', fileToUpload);\r\n\r\n    return this.http.post(endpoint, formData);\r\n  }\r\n\r\n\r\n\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      this.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n  /** Log a HeroService message with the MessageService */\r\n  private log(message: string) {\r\n    console.log(message);\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  CAMUNDA_URL : \"http://localhost:8800/engine-rest/\"\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}